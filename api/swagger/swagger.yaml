swagger: "2.0"
################################################################################
#                              API Information                                 #
################################################################################
info:
  version: "0.0.1"
  title: User API
################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
host: localhost:8000
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
################################################################################
#                                   Tags                                       #
################################################################################
tags:
- name: User
  description: Operations about user
################################################################################
#                                   Paths                                      #
################################################################################
paths:
  /users:
    # binds a127 app logic to a route
    x-swagger-router-controller: users
    get:
      tags:
      - User
      description: Get all users
      # used as the method name of the controller
      operationId: getUsers
      parameters:
        - name: skip
          in: query
          description: Number of items to skip
          required: false
          type: integer
          format: int32
          minimum: 0
        - name: limit
          in: query
          description: Max records to return
          required: false
          type: integer
          format: int32
          minimum: 10
          maximum: 1000
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: '#/definitions/Users'
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - api_key: []
    post:
      tags:
        - User
      description: Add a user
      operationId: addUser
      parameters:
        - name: user
          in: body
          description: User to add
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/User'
        "409":
          description: Duplicate email
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - api_key: []
  /users/{uid}:
    x-swagger-router-controller: users
    get:
      tags:
        - User
      description: Get user by id
      operationId: getUserById
      parameters:
        - name: uid
          in: path
          description: The user id
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad request
        "404":
          description: User not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - api_key: []
    put:
      tags:
        - User
      description: Update a user
      operationId: updateUser
      parameters:
        - name: uid
          in: path
          description: The user id
          required: true
          type: string
        - name: user
          in: body
          description: User to update
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad request
        "404":
          description: User not found
        "409":
          description: Duplicate email
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - api_key: []
    delete:
      tags:
        - User
      description: Delete a user
      operationId: deleteUser
      parameters:
        - name: uid
          in: path
          description: The user id
          required: true
          type: string
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
        "404":
          description: User not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - api_key: []
  /login:
    x-swagger-router-controller: users
    post:
      tags:
        - User
      description: Authenticate user
      operationId: login
      parameters:
        - name: credential
          in: body
          description: The user email and password for login
          required: true
          schema:
            $ref: '#/definitions/Credential'
      responses:
        "200":
          description: successful operation
          schema:
            type: string
        "400":
          description: Invalid username/password supplied
        "404":
          description: User not found
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /validateToken:
    x-swagger-router-controller: users
    post:
      tags:
        - User
      description: Validate user jwt token
      operationId: validateToken
      parameters:
        - name: jwt
          in: body
          description: The user token
          required: true
          schema:
            $ref: '#/definitions/JwtToken'
      responses:
        "200":
          description: successful operation
          schema:
            type: string
        "400":
          description: Invalid jwt token supplied
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /swagger:
    x-swagger-pipe: swagger_raw
################################################################################
#                                  Security                                    #
################################################################################
securityDefinitions:
  api_key:
    type: apiKey
    name: x-api-key
    in: header
################################################################################
#                                   Definitions                                #
################################################################################
definitions:
  User:
    type: object
    required:
      - username
      - email
      - gender
      - group
    properties:
      username:
        type: string
        minLength: 1
        maxLength: 50
      firstname:
        type: string
        maxLength: 100
      lastname:
        type: string
        maxLength: 100
      email:
        type: string
        format: email
        maxLength: 100
      password:
        type: string
      location:
        $ref: '#/definitions/Location'
      gender:
        type: string
        description: User gender
        default: m
        enum:
          - m
          - f
      group:
        type: string
        description: User group
        enum:
          - admin
          - user
  Coordinates:
    type: object
    required:
      - type
      - coordinates
    properties:
      type:
        type: string
      coordinates:
        type: array
        items:
          type: number
  Location:
    type: object
    required:
      - place
      - placeId
      - coords
    properties:
      place:
        type: string
      placeId:
        type: string
      coords:
        $ref: '#/definitions/Coordinates'
  Credential:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        format: email
        maxLength: 100
      password:
        type: string
  JwtToken:
    type: object
    required:
      - token
    properties:
      token:
        type: string
  Users:
    type: array
    items:
      $ref: '#/definitions/User'
  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
        minimum: 100
        maximum: 600
      fields:
        type: object
